apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId config.applicationId

        minSdkVersion config.minSdkVersion
        targetSdkVersion config.compileSdkVersion

        versionCode config.versionCode
        versionName config.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        buildConfigField "String", "API_URL", "\"$config.apiUrl\""
        buildConfigField "String", "API_KEY", "\"$config.apiKey\""
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    // Android
    implementation "androidx.appcompat:appcompat:$versions.appCompat"
    implementation "androidx.core:core-ktx:$versions.coreKtx"
    implementation "androidx.fragment:fragment-ktx:$versions.fragmentKtx"
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerView"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"

    implementation "androidx.lifecycle:lifecycle-viewmodel:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"

    // Navigation Component
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigation"
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$versions.navigation"

    // Dependency Injection
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$versions.hiltViewModel"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hilt"
    kapt "androidx.hilt:hilt-compiler:$versions.hiltViewModel"

    // Google Material
    implementation "com.google.android.material:material:$versions.googleMaterial"

    // Paging 3
    implementation "androidx.paging:paging-runtime-ktx:$versions.paging"
    implementation "androidx.paging:paging-runtime:$versions.paging"

    // Network
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okHttp"
    implementation "com.squareup.okhttp3:okhttp:$versions.okHttp"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutinesAndroid"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesAndroid"

    // Image Loading
    implementation "com.github.bumptech.glide:glide:$versions.glide"

    // Animations
    implementation "com.airbnb.android:lottie:$versions.lottie"

    // Logging
    implementation "com.jakewharton.timber:timber:$versions.timber"

    // Tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "io.mockk:mockk:$versions.mockk"
    testImplementation "androidx.arch.core:core-testing:$versions.archCore"

    androidTestImplementation "androidx.test.ext:junit:$versions.androidJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoCore"
    implementation project(path: ':base')
}
